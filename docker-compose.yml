services:
  api:
    build: ./api
    container_name: strava-analytics-api
    restart: unless-stopped
    ports:
      - "58001:5000"
    volumes:
      - ./api:/app
      - ./data:/app/data
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - STRAVA_CLIENT_ID=${STRAVA_CLIENT_ID}
      - STRAVA_CLIENT_SECRET=${STRAVA_CLIENT_SECRET}
      - STRAVA_REDIRECT_URI=${STRAVA_REDIRECT_URI}
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY}
      - PYTHONUNBUFFERED=1
    depends_on:
      db:
        condition: service_healthy

  db:
    build: ./database
    container_name: strava-analytics-db
    restart: unless-stopped
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/backup:/backup
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      
volumes:
  postgres-data: